from flask import Flask, request, jsonify
from github import Github
from dotenv import load_dotenv
import os
import requests

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

app = Flask(__name__)

@app.route("/", methods=["GET"])
def home():
    return "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route("/upload", methods=["POST"])
def upload():
    try:
        data = request.get_json()
        print(f"üì• –ü–æ–ª—É—á–µ–Ω JSON: {data}")

        file_url = data.get("file")
        print(f"üîó URL —Ñ–∞–π–ª–∞: {file_url}")

        if not file_url or not file_url.endswith(".xmind"):
            return jsonify({"error": "‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .xmind"}), 400

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –ø–æ URL
        response = requests.get(file_url)
        print(f"üì° –°—Ç–∞—Ç—É—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
        if response.status_code != 200:
            return jsonify({"error": f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ö–æ–¥: {response.status_code}"}), 400

        content = response.content
        filename = os.path.basename(file_url)

        github_token = os.getenv("GITHUB_TOKEN")
        repo_name = os.getenv("GITHUB_REPO")
        branch = os.getenv("GITHUB_BRANCH", "main")
        target_path = os.getenv("GITHUB_TARGET_PATH", "matrix.xmind")

        print(f"üõ† GitHub ‚Üí –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_name}, –í–µ—Ç–∫–∞: {branch}, –ü—É—Ç—å: {target_path}")

        g = Github(github_token)
        repo = g.get_repo(repo_name)

        try:
            current_file = repo.get_contents(target_path, ref=branch)
            repo.update_file(
                path=target_path,
                message=f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ {filename} —á–µ—Ä–µ–∑ Dify",
                content=content,
                sha=current_file.sha,
                branch=branch
            )
            print("‚úÖ –§–∞–π–ª –æ–±–Ω–æ–≤–ª—ë–Ω —á–µ—Ä–µ–∑ update_file")
        except Exception as e:
            print(f"üìÑ –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –∑–∞–Ω–æ–≤–æ. –û—à–∏–±–∫–∞: {e}")
            repo.create_file(
                path=target_path,
                message=f"–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ {filename} —á–µ—Ä–µ–∑ Dify",
                content=content,
                branch=branch
            )
            print("‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ create_file")

        return jsonify({"message": "‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub"}), 200

    except Exception as e:
        print(f"üî• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}")
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)