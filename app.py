from flask import Flask, request, jsonify
from github import Github
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

app = Flask(__name__)

@app.route("/", methods=["GET"])
def home():
    return "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route("/upload", methods=["POST"])
def upload():
    # üîç –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø –û–¢–õ–ê–î–ö–ò
    print("üîΩ –ü–æ–ª—É—á–µ–Ω POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /upload")
    print("üîç –ó–∞–≥–æ–ª–æ–≤–∫–∏:", dict(request.headers))

    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–Ω—è—Ç—å, —á—Ç–æ –±—ã–ª–æ –≤ —Ç–µ–ª–µ
    try:
        json_data = request.get_json(force=True)
        print("üîç –ü–æ–ª—É—á–µ–Ω JSON:", json_data)
    except Exception:
        json_data = None
        print("‚ö†Ô∏è JSON –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–∏–ª—Å—è")

    print("üîç –§–æ—Ä–º-–ø–æ–ª—è:", request.form)
    print("üîç –§–∞–π–ª—ã:", request.files)

    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ form-data
    file = request.files.get("file")

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª ‚Äì –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏—Å–ª–∞–ª–∏ URL –≤ json
    if not file and json_data and "file" in json_data:
        from urllib.request import urlopen
        from io import BytesIO

        try:
            file_url = json_data["file"]
            filename = file_url.split("/")[-1] or "matrix.xmind"
            if not filename.endswith(".xmind"):
                return jsonify({"error": "–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .xmind"}), 400

            print(f"‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –ø–æ —Å—Å—ã–ª–∫–µ: {file_url}")
            response = urlopen(file_url)
            content = response.read()
        except Exception as e:
            return jsonify({"error": f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –ø–æ —Å—Å—ã–ª–∫–µ: {str(e)}"}), 400
    elif file:
        filename = file.filename
        if not filename.endswith(".xmind"):
            return jsonify({"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –¢–æ–ª—å–∫–æ .xmind"}), 400
        content = file.read()
    else:
        return jsonify({"error": "–§–∞–π–ª –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω"}), 400

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ GitHub
    try:
        github_token = os.getenv("GITHUB_TOKEN")
        repo_name = os.getenv("GITHUB_REPO")
        branch = os.getenv("GITHUB_BRANCH", "main")
        target_path = os.getenv("GITHUB_TARGET_PATH", "matrix.xmind")

        if not all([github_token, repo_name]):
            return jsonify({"error": "–ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è GITHUB_TOKEN –∏–ª–∏ GITHUB_REPO"}), 500

        g = Github(github_token)
        repo = g.get_repo(repo_name)
        current_file = repo.get_contents(target_path, ref=branch)

        repo.update_file(
            path=target_path,
            message=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ Dify: {filename}",
            content=content,
            sha=current_file.sha,
            branch=branch
        )

        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ GitHub")
        return jsonify({"message": "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ GitHub"}), 200

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", str(e))
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)